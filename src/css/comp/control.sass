/*md
    [@] Components/Labeled Control

    # Labled Control
    The labeled control is a label that contains a text-style input (input that
    isn't checkbox or radio, textarea) or a select element and the text that
    make up the label.

    To mark a label as a labeled control, add the `@control` wind function.

    ## Wind Functions
    - @flat
    - $color

    ## Attributes
    - ws-error\\
        Adding the ws-error attribute to the lable will make error text display
        below the component.

    ### Children Wind Functions
    - $text\\
        sets the element with the text for the label
        - attr: ws-hint
            The ws-hint attribute can be applied to the element marked as the
            label and will have the content of the attribute added as a hint
            underneath the label for the element.
    - slot[start / end]\\
        adds an adornment to the input area, probably only looks good with
        input elements that are typed text.

    {yaml}
    frame:  index.html#control
    code:  control.html
    height: 400px

label:where([ws-x~="@control"])
    --color: var(--default)
    --border-color: var(--default)

    position: relative
    display: inline-grid
    grid-template-areas: "label label label" " start control end" "extra extra extra"
    grid-template-rows: minmax(0px, min-content) auto minmax(0px, min-content)
    grid-template-columns: minmax(0px, min-content) auto minmax(0px, min-content)
    border: 1px solid var(--border-color)
    border-radius: 4px
    user-select: none
    overflow: hidden

    &:where([ws-error])::after
        content: attr(ws-error)
        grid-row: 3
        grid-column: span 3
        padding: 4px
        font-size: var(--text-size-info)
        background-color: var(--danger-ripple)

    &:focus-within
        --border-color: var(--color)

    & > select
    & > :where(select)
        --color: var(--text-color-normal)

        border-width: 0px
        padding: 8px
        min-height: 36px
        background-color: transparent
        color: var(--color)
        font: var(--font)
        font-size: var(--text-size-normal)
        cursor: pointer
        background-color: var(--background-layer)
        grid-area: control

        &:focus
            outline: none

    & > select
        option, optgroup
            background-color: var(--background-layer)
            border-color: var(--background-layer)
            color: var(--text-color-normal)
            font-size: var(--text-size-normal)
            font-family: Arial

    & > :where(input, textarea)
        border-width: 0px
        background: transparent
        color: var(--text-normal-color)
        font-family: var(--font)
        min-width: 24px
        min-height: 36px
        width: 100%
        height: 100%
        grid-area: control
        padding: 4px
        background-color: var(--background-layer)

        &:focus
            outline: none

    & > input[type="file"]
        position: relative
        padding: 0px
        &::file-selector-button
            font-family: var(--font)
            height: 100%
            margin: 0px
            margin-right: 4px
            padding: 4px
            color: var(--text-normal-color)
            background-color: var(--background-layer)
            border-width: 0px
            border-right: 1px solid var(--border-color)
            text-decoration: underline

    & > :where([ws-x~="$text"])
        grid-area: label
        padding: 4px
        display: flex
        align-items: center
        border-bottom: var(--border-size, 1px) solid var(--border-color)
        border-right: var(--border-size, 1px) solid var(--border-color)
        color: var(--color)
        width: min-content
        white-space: nowrap
        border-bottom-right-radius: 4px

        &:where([ws-hint])::after
            font-size: var(--text-size-subtitle)
            content: "\A" attr(ws-hint)
            color: var(--text-color-secondary)
            white-space: pre
            display: contents

    & > :where([ws-x~="slot[start]"], [slot="start"])
        grid-area: start
    & > :where([ws-x~="slot[end]"], [slot="end"])
        grid-area: end
