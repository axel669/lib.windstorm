/*md
    [@] Components/Screen

    # Screen

    The screen acts as a wrapper for a paper (or other container) to sit in
    and only provides the sizing/centering with the stacking visual effect.
    The top level of a page will likely be a screen but it doesnt have to be.

    ## Wind Functions
    - @left\\
        Left aligns the container in the screen

    ## Variables
    - screen-width\\
        Defines how wide the screen's contents will be.\\
        default: min(720px, 100%)
    - stack\\
        Increasing the stack number increases the space surrounding a screen,
        creating a stacking effect when multiple screens are overlayed with
        incrementing stack values.

    There will be examples and more docs when I feel like it, I don't know
    where I'd begin documenting this.

    {yaml}
    frame:  index.html#screen
    code:  screen.html
    height: 400px

ws-screen
    --stack: 0
    --screen-width: min(720px, 100%)

    display: grid
    width: calc(100% - var(--sub-pixel-offset))
    height: calc(100% - 1px)
    overflow: hidden
    position: fixed
    top: 0px
    left: 0px
    z-index: 200
    background-color: rgba(0, 0, 0, 0.4)
    grid-template-columns: auto calc(var(--screen-width) - calc(16px * var(--stack))) auto

    grid-template-areas: ". content ."

    padding-top: calc(8px * var(--stack))

    &[ws-x~="@left"]
        grid-template-columns: calc(8px * var(--stack)) calc(var(--screen-width) - calc(16px * var(--stack))) auto

    & > :where(*)
        grid-area: content
        height: 100%
        overflow: hidden
